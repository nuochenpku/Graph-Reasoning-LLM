Find one of the topology sorting paths of the given graph. 
In a directed graph, (i->j) means that node i and node j are connected with a directed edge from node i to node j.
Given a graph, you need to output one of the topology sorting paths of the graph. 

Below are several examples:


Q: The nodes are numbered from 0 to 4, and the edges are: (0->3) (0->4) (0->1) (0->2) (1->4) (1->3) (2->4) (2->3) (3->4). Give one topology sorting path of this graph.
A: To find a topological sorting path for the directed graph with nodes 0 to 4 and edges like (0->3), (0->4), and so on, we can apply a method where we choose nodes with no incoming edges, one by one. 
Initially, node 0 is selected as it doesn't have any incoming edges. 
Next, nodes 1 and 2 become candidates after removing node 0 and its edges; 
let's pick node 1. Following this, node 2 is the next choice. 
After removing node 2, node 3 becomes our next pick. 
Finally, node 4, being the only remaining node, is chosen. 
Consequently, a valid topological sorting path for this graph is in the order of [0, 1, 2, 3, 4]. ### [0, 1, 2, 3, 4].


Q: The nodes are numbered from 0 to 3, and the edges are: (0->3) (0->2) (1->3) (2->3). Give one topology sorting path of this graph.
A: we can adopt a strategy where nodes are sequentially chosen based on the absence of incoming edges. 
Initially, nodes 0 and 1 stand out as they have no edges leading into them. 
Starting with node 0, it logically precedes nodes 2 and 3 due to its outgoing edges. 
Following node 0, we select node 2, which is connected directly from node 0. Node 1 is the next choice, as it doesnâ€™t depend on node 2 and leads into node 3. 
Finally, node 3, being the endpoint of edges from nodes 0, 1, and 2, is placed last in the sequence. 
This methodical selection process results in a topological sorting path of [0, 2, 1, 3] for the graph, adhering to the directional flow of its edges. ### [0, 2, 1, 3].
